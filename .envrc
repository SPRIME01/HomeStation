#!/usr/bin/env bash
#
# Project environment loader (direnv)
# - Keeps secrets out of the repo, but easy to use
# - Sources optional per-developer files and non-secret overrides
# - Plays nicely with the Justfile env_var_or_default pattern

# Reduce direnv chatter; set to empty to silence
: "${DIRENV_LOG_FORMAT:="direnv: %s"}"

# Reload when these change
watch_file tools/secrets/.envrc.vault
watch_file tools/secrets/.env.vault
watch_file tools/secrets/.envrc.cloudflare
watch_file .env
watch_file .env.local

# 1) Load Vault session if present (written by `just vault-init`)
#    Contains: export VAULT_ADDR=..., export VAULT_TOKEN=...
#    Load legacy first, then new file so the new one overrides.
source_env_if_exists tools/secrets/.env.vault  # legacy name
source_env_if_exists tools/secrets/.envrc.vault

# Optional: quick health hint for Vault token (skip if you prefer)
if [ -n "${VAULT_TOKEN:-}" ] && [ "${DIRENV_SKIP_VAULT_CHECK:-0}" != "1" ]; then
  if command -v vault >/dev/null 2>&1; then
    if command -v timeout >/dev/null 2>&1; then
      timeout 2s vault token lookup >/dev/null 2>&1 || echo "[hint] VAULT_TOKEN present but not valid; run 'just vault-init' or re-auth."
    else
      vault token lookup >/dev/null 2>&1 || echo "[hint] VAULT_TOKEN present but not valid; run 'just vault-init' or re-auth."
    fi
  fi
fi

# 2) Non-secret developer overrides (checked-in .env can hold defaults; .env.local is ignored)
#    Later files override earlier ones.
dotenv_if_exists .env
dotenv_if_exists .env.local

# 3) Optional: Cloudflare API token for cert-manager DNS-01 helper
#    Create tools/secrets/.envrc.cloudflare with: export CF_API_TOKEN=...
source_env_if_exists tools/secrets/.envrc.cloudflare

# Examples: uncomment to override Justfile defaults here (non-secret)
# export DOMAIN=homelab.lan
# export TLS_PUBLIC_DOMAIN=primefam.cloud
# export ACME_EMAIL=you@example.com
